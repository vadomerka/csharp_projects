Я постарался применить принципы солид, делал я это используя большое количество Интерфейсов. Я их делю на несколько групп. 
	- Первая группа - модельные интерфейсы: IInventory, IAlive, IMood - они отвечают за принадлежность к инвентарю, чему-то что может есть (чтобы людей потом можно было учитывать) и что-то что может быть добрым (чтобы опять же людей потом добавить). Естественно т.к. животные находятся в том же списке, что и предметы (и как я понял из условия) IAlive наследует IInventory.
	- Далее идет группа "вспомогательная" IHasInventory - для класса HseZoo, но т.к. на самом деле он является лишь хранилищем инвентаря, я посчитал что интерфейс для такого хранилища будет более крутым с точки зрения расширения кода. То же самое с IHealthAnalyser - сейчас у нас анализирует вет клиника, но вдруг будет доктор Айболит, который тоже анализирует но при этом он человек? поэтому интерфейс. 
	- И последняя группа - интерфейсы для фабрик. Фабрика в коде всего одна, и она абстрактная, потому что производит вещи и животных. Ну и поэтому 3 интерфейса, где IInventory хранит индекс, который отвечает за Number у инвентаря.
	
Про фабрику я уже сказал, теперь немного про структуру самих классов. Я взял все из условия: Animal и Thing - абстрактные классы, которые реализуют IAlive и IInventory соответсвенно. Herbo и Predator наследуют от Animal и тоже абстрактны, в то время как Herbo еще и IMood. Наконец Monkey, Rabbit наследуют Herbo, а Tiger, Wolf наследуют Predator.

HseZoo - просто класс, который реализует IHasInventory, хранит список Инвентаря. Может добавлять уже существующие объекты, и возвращать список объектов (фильтруя и приводя к нужному типу).

VetClinic - проверяет случайным образом подходит животное зоопарку или нет (по дефолту поставил 1/5 провала).

AppConfig - класс для регистрации и возвращения сервисов (классы в 3 пунктах выше)


UIZoo - класс с консольным интерфейсом для пользователя. Помимо ввода вывода содержит метод для доп. фильтрации контактности животных.


Юнит тесты я сделал, однако та утилита покрытия, которую я нашел говорит, что покрыто только 37%, я думаю, это из-за того что я не покрывал UIZoo и интерфейсы. Если смотреть чисто по папочке модели, там покрыто около 98%, можете сами открыть убедиться, надеюсь на ваше понимание (или хотя бы совет что делать в таких случаях)
